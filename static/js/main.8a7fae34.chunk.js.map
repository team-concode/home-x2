{"version":3,"sources":["Services/StringBundleService.js","App.js","reportWebVitals.js","index.js"],"names":["ee","EventEmitter","getSystemLang","systemLang","navigator","language","userLanguage","dash","indexOf","substr","load","sb","Map","index","bundle","length","item","set","key","toLowerCase","changeLang","lang","_setLang","emit","localStorage","setItem","addEventHandler","event","a","on","removeEventHandler","off","get","res","undefined","value","getWithLang","replace","format","args","sf","en","ko","this","getItem","App","className","Image","src","centered","Grid","container","stackable","Row","Segment","basic","size","Header","as","Subheader","Column","width","floated","secondary","Content","href","sbService","Embed","id","placeholder","source","Group","Container","textAlign","onClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a7fae34.chunk.js","sourcesContent":["import EventEmitter from 'events';\nimport bundle from \"../Config/StringBundle.json\";\nimport sf from 'sf';\n\nclass StringBundleService {\n  ee = new EventEmitter();\n\n  constructor() {\n    this.load();\n\n    let lang = localStorage.getItem('lang');\n    if (lang !== null && lang !== undefined) {\n      this._setLang(lang);\n    } else {\n      this._setLang('en');\n      this._setLang(this.getSystemLang());\n    }\n  }\n\n  getSystemLang = () => {\n    let systemLang = navigator.language || navigator.userLanguage;\n    let dash = systemLang.indexOf(\"-\");\n    if (dash > 0) {\n      systemLang = systemLang.substr(0, dash);\n    }\n\n    return systemLang;\n  };\n\n  load = () => {\n    this.sb = new Map();\n    for (let index = 0; index < bundle.length; index++) {\n      let item = bundle[index];\n      this.sb.set(item.key.toLowerCase(), item);\n    }\n  };\n\n  changeLang = (lang) => {\n    this._setLang(lang);\n    this.ee.emit('updated');\n  };\n\n  _setLang = (lang) => {\n    if (lang === 'ko') {\n      this.lang = lang;\n      this.language = '한국어';\n    } else {\n      this.lang = 'en';\n      this.language = 'English';\n    }\n\n    localStorage.setItem('lang', this.lang);\n  };\n\n  addEventHandler = async(key, event) => {\n    this.ee.on(key, event);\n  };\n\n  removeEventHandler = async(key, event) => {\n    this.ee.off(key, event);\n  };\n\n  get = (key) => {\n    if (key == null) {\n      return '';\n    }\n\n    key = key.toLowerCase();\n    let res = this.sb.get(key);\n    if (res === undefined || res == null) {\n      return key;\n    }\n\n    let value = this.getWithLang(key, this.lang);\n    if (value === undefined || value == null || value === \"\") {\n      value = this.getWithLang(key, 'en');\n      if (value === undefined || value == null) {\n        return key;\n      }\n    }\n\n    value = value.replace('\\n', ' ');\n    return value;\n  };\n\n  format = (key, ...args) => {\n    let res = this.get(key);\n    if (res == null) {\n      return key;\n    }\n    return sf(res, args);\n  };\n\n  getWithLang = (key, lang) => {\n    let res = this.sb.get(key);\n    if (res != null) {\n      if (lang === 'en') {\n        return res.en;\n      }\n\n      if (lang === 'ko') {\n        return res.ko;\n      }\n    }\n\n    return \"\";\n  };\n}\n\nexport default new StringBundleService();","import React, { Component } from \"react\";\n\nimport \"semantic-ui-css/semantic.min.css\";\n\nimport {\n  Button,\n  Container,\n  Divider,\n  Grid,\n  Header, Image,\n  Embed,\n  Message,\n  Segment\n} from \"semantic-ui-react\";\n\nimport \"./App.css\";\nimport sbService from \"./Services/StringBundleService\";\n\nclass App extends Component {\n  render() {\n    return (\n        <div className=\"App\">\n          <Image src=\"/banner.png\" centered/>\n          <Grid container stackable>\n            <Grid.Row>\n              <Segment basic>\n                <Image src=\"/LogoB.png\" size=\"medium\"/>\n                <Header as=\"h1\" size=\"huge\">\n                  <Header.Subheader>\n                    Puzzle Action Adventure\n                  </Header.Subheader>\n                </Header>\n              </Segment>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column width={4} floated=\"left\">\n                <Segment secondary>\n                  <Header as=\"h4\">\n                    <Header.Content>Release Date:</Header.Content>\n                    <Header.Subheader>\n                      2025\n                    </Header.Subheader>\n                  </Header>\n\n                  <Header as=\"h4\">\n                    <Header.Content>Platforms:</Header.Content>\n                    <Header.Subheader>\n                      <a href=\"https://store.steampowered.com/app/2888960/Graytail/\">Steam</a>\n                    </Header.Subheader>\n                  </Header>\n\n                </Segment>\n              </Grid.Column>\n              <Grid.Column width={11}>\n                <p>\n                  {sbService.get('desc')}\n                </p>\n\n                <Header as=\"h3\" size=\"medium\">\n                  {sbService.get('interaction.key')}\n                </Header>\n                <p>\n                  {sbService.get('interaction.desc')}\n                </p>\n\n                <Header as=\"h3\" size=\"medium\">\n                  {sbService.get('story.key')}\n                </Header>\n                <p>\n                  {sbService.get('story.desc')}\n                </p>\n\n                <Header as=\"h3\" size=\"medium\">\n                  Videos\n                </Header>\n                <p>\n                  <Embed\n                      id='gWe-pbaj8rY'\n                      placeholder='/Video.png'\n                      source='youtube'\n                  />\n                </p>\n\n                <Header as=\"h3\" size=\"medium\">\n                  Images\n                </Header>\n                <Image.Group size='medium'>\n                  <Image src='/screenshots/2.png' />\n                  <Image src='/screenshots/9.png' />\n                  <Image src='/screenshots/4.png' />\n                  <Image src='/screenshots/1.png' />\n                  <Image src='/screenshots/3.png' />\n                  <Image src='/screenshots/5.png' />\n                  <Image src='/screenshots/6.png' />\n                  <Image src='/screenshots/7.png' />\n                  <Image src='/screenshots/8.png' />\n                  <Image src='/screenshots/10.png' />\n                </Image.Group>\n\n                <Header as=\"h3\" size=\"medium\">\n                  Icon\n                </Header>\n                <p>\n                  <Image src=\"/Icon512.png\" size=\"small\"/>\n                </p>\n\n                <Header as=\"h3\" size=\"medium\">\n                  Contact\n                </Header>\n                <p>\n                  <Header as=\"h4\" size='small'>\n                    <Header.Content>Inquiries</Header.Content>\n                    <Header.Subheader>\n                      <a href=\"mailto:dev@concode.co\">dev@concode.co</a>\n                    </Header.Subheader>\n                  </Header>\n\n                  <Header as=\"h4\" size='small'>\n                    <Header.Content>Twitter</Header.Content>\n                    <Header.Subheader>\n                      <a href=\"https://twitter.com/teamconcode\">https://twitter.com/teamconcode</a>\n                    </Header.Subheader>\n                  </Header>\n\n                </p>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n          <Segment secondary as=\"footer\" className=\"footer\">\n            <Container textAlign=\"center\">\n              <p>\n                Copyright{\" \"}\n                <a href=\"https://concode.co\">@CONCODE</a>\n              </p>\n              <p>\n                <a href=\"\" onClick={()=>sbService.changeLang(\"ko\")}>KO</a> | <a href=\"\" onClick={()=>sbService.changeLang(\"en\")}>EN</a>\n              </p>\n            </Container>\n          </Segment>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}